userdao.INSERT_USER_SQL=INSERT INTO user (email, password, account_non_expired, account_non_locked,\
        credentials_non_expired, enabled, role) VALUES (?, ?, ?, ?, ?, ?, ?);
userdao.INSERT_USER_PROFILE_SQL=INSERT INTO profile (profile_id, first_name_en, first_name_ru, last_name) VALUES (?, ?, ?, ?);
userdao.UPDATE_USER_PROFILE_SQL=UPDATE profile SET first_name_en=?, first_name_ru=?, last_name=?, age=?, \
  height=?, weight=?, lifestyle=? WHERE profile_id=?;
userdao.SELECT_GROUP_SQL=SELECT email, first_name_en as first_name_localized, last_name, age, weight, height, lifestyle \
  FROM dreamfit_nutrition_tracker.group as m \
  JOIN (SELECT id as admin_id, email as admin_email FROM user as u where email = ?) as a on m.admin_id = a.admin_id \
  join user on member_id = user.id join profile on id = profile_id;
userdao.SELECT_NOTIFICATIONS_SQL=SELECT profile_id as sender_id, first_name_en, last_name, datetime, message FROM dreamfit_nutrition_tracker.notification \
  JOIN profile ON sender_id = profile_id WHERE receiver_id = \
  (SELECT profile_id from user join profile on user.id = profile.profile_id where profile_id = ?);
user_dao.SELECT_BY_USERNAME_SQL=SELECT * FROM user INNER JOIN profile ON user.id = profile.profile_id \
        LEFT OUTER JOIN profile_to_food USING (profile_id) LEFT OUTER JOIN food USING (food_id) \
        WHERE email = ?;
userdao.INSERT_INVITATION_SQL=INSERT into notification \
  (sender_id, receiver_id, datetime, message) values (? ,(SELECT id from user where email = ?) , ?, ?);
userdao.DELETE_INVITATION_SQL=DELETE from notification WHERE sender_id=? and receiver_id = ? and datetime =?;
userdao.INSERT_USER_TO_GROUP_SQL=INSERT into dreamfit_nutrition_tracker.group (admin_id, member_id) values (? , ?) ;
userdao.DELETE_NOTIFICATION_SQL=DELETE from notification where sender_id=? and receiver_id=?;
daily_record_dao.INSERT_DAILY_RECORD_SQL=INSERT IGNORE INTO daily_record \
                                         (record_id, profile_id, record_date, daily_calories_norm) VALUES (?, ?, ?, ?);
daily_record_dao.INSERT_ENTRIES_SQL=INSERT INTO daily_record_entry (food_id, record_id, quantity, entry_id) \
                                        VALUES (?, ?, ?, ?);
daily_record_dao.SELECT_BY_DATE_PERIOD_AND_QUANTITY=SELECT * FROM daily_record_entry INNER JOIN food USING (food_id) \
         INNER JOIN (SELECT * from daily_record WHERE profile_id = ? and record_date BETWEEN ? AND ?) as temp  \
         USING (record_id) \
         ORDER BY record_date DESC;
food_dao.INSERT_FOOD_SQL=INSERT INTO food (name, calories, proteins, fats, carbohydrates) values (?, ?, ?, ?, ?);
food_dao.INSERT_FOOD_FOR_PROFILE_SQL=INSERT INTO profile_to_food (profile_id, food_id) values (?, ?);
food_dao.SELECT_FOOD_SQL=SELECT * FROM food WHERE name LIKE ?
article_dao.INSERT_ARTICLE_SQL=INSERT IGNORE INTO feed_article (article_id, title_en, title_ru, author_id, \
   date_created, text_en, text_ru, image) values (?, ?, ?, ?, ? ,? , ?, ? );
article_dao.SELECT_BY_DATE_AND_QUANTITY=SELECT article_id, title_? as title_localisation, author_id, date_created as date, \
  text_? as text_localisation, image as imageBytes, first_name_? as authorFirstName, last_name as authorLastName  \
   FROM feed_article join USER ON feed_article.author_id = user.id JOIN profile ON user.id = profile.profile_id
article_dao.SELECT_BY_ID=SELECT article_id, title_? as title_localisation, author_id, date_created as date, \
  text_?  as text_localisation, image as imageBytes, first_name_? as authorFirstName, last_name as authorLastName \
   FROM feed_article join USER ON feed_article.author_id = user.id JOIN profile ON user.id = profile.profile_id \
   WHERE article_id =?